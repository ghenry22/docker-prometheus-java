version: '3.3'
networks:
  test-docker-net:
    external: true
services:
#
# Prometheus - data collection
#
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    environment:
      - PUID=100
      - PGID=100
      - TZ=Asia/Singapore
    volumes:
      - ./data/prometheus/config:/etc/prometheus
      - ./data/prometheus/data:/prometheus
    ports:
      - 9090:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    restart: unless-stopped
    networks:
      - test-docker-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090"]
      interval: 30s
      timeout: 10s
      retries: 5
#
# Alertmanager - trigger alerts for various conditions to various channels
#
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    environment:
      - PUID=100
      - PGID=100
      - TZ=Asia/Singapore
    volumes:
      - ./data/alertmanager/config:/etc/alertmanager
      - ./data/alertmanager/data:/alertmanager
    ports:
      - 9093:9093
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    networks:
      - test-docker-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9093"]
      interval: 30s
      timeout: 10s
      retries: 5
#
# Nodeexporter - export system metrics for prometheus
#
  nodeexporter:
    image: prom/node-exporter:latest
    container_name: nodeexporter
    environment:
      - PUID=100
      - PGID=100
      - TZ=Asia/Singapore
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    ports:
      - 9100:9100
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    networks:
      - test-docker-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9100"]
      interval: 30s
      timeout: 10s
      retries: 5

#
# Grafana - data visualization
#
  # grafana:
  #   image: prom/prometheus:latest
  #   container_name: prometheus
  #   environment:
  #     - PUID=1026
  #     - PGID=100
  #     - TZ=Asia/Singapore
  #   volumes:
  #     - ./data/prometheus:/etc/prometheus
  #   ports:
  #     - 9090:9090
  #   restart: unless-stopped
  #   networks:
  #     - test-docker-net
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:9090"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5
