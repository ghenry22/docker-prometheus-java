version: '3.3'
networks:
  test-docker-net:
    external: true
services:
#
# Prometheus - data collection
#
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./data/prometheus/config:/etc/prometheus
      - ./data/prometheus/data:/prometheus
    ports:
      - 9090:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    restart: unless-stopped
    networks:
      - test-docker-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090"]
      interval: 30s
      timeout: 10s
      retries: 5
#
# Grafana - data vizualization
#
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=Password123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./data/grafana/config:/etc/grafana/provisioning
      - ./data/grafana/data:/var/lib/grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    networks:
      - test-docker-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5
#
# Alertmanager - trigger alerts for various conditions to various channels
#
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    volumes:
      - ./data/alertmanager/config:/etc/alertmanager
      - ./data/alertmanager/data:/alertmanager
    ports:
      - 9093:9093
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    networks:
      - test-docker-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9093"]
      interval: 30s
      timeout: 10s
      retries: 5
#
# Nodeexporter - export system metrics for prometheus
#
  nodeexporter:
    image: prom/node-exporter:latest
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      # - /:/rootfs:ro #DOES NOT WORK ON MAC, uncomment on Linux
    ports:
      - 9100:9100
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      # - '--path.rootfs=/rootfs' #DOES NOT WORK ON MAC, uncomment on Linux
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    networks:
      - test-docker-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9100"]
      interval: 30s
      timeout: 10s
      retries: 5
#
# Pushgateway - push metrics for jobs that cannot be scraped (ie from batch jobs etc)
#
  pushgateway:
    image: prom/push-gateway:latest
    container_name: pushgateway
    ports:
      - 9091:9091
    restart: unless-stopped
    networks:
      - test-docker-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091"]
      interval: 30s
      timeout: 10s
      retries: 5
#
# Cadvisor - collect container stats
#
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /dev/disk/:/dev/disk:ro
      - /var/lib/docker:/var/lib/docker:ro
      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
      #- /:/rootfs:ro #DOES NOT WORK ON MAC, uncomment on Linux
    ports:
      - 8080:8080
    restart: unless-stopped
    networks:
      - test-docker-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 5